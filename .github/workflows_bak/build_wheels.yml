name: Build wheels with Cython

on:
  push:
    tags:
      - "*"        # 匹配 v0.1.0, v1.0.0 等
      - "release-*" # 可选：匹配 release- 开头的 tag
  workflow_dispatch:  # 允许手动触发
    inputs:
      tag_name:
        description: 'Tag to release (e.g. v0.1.0)'
        required: true

env:
  # 设置构建输出详细程度
  CIBW_BUILD_VERBOSITY: 1


jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04, windows-2022, macos-13 ]
        python-version: ['3.10', '3.11', '3.12']  # 支持 3.10+
        include:
          - python-version: '3.10'
            cibw-build: "cp310-*"
          - python-version: '3.11'
            cibw-build: "cp311-*"
          - python-version: '3.12'
            cibw-build: "cp312-*"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential

      - name: Install cibuildwheel
        run: |
          pip install cibuildwheel==2.23.3

      - name: Clean build directories
        run: |
          python -c "
          import shutil, os
          for d in ['wheelhouse', 'dist', 'build']:
              if os.path.exists(d):
                  shutil.rmtree(d)
              os.makedirs(d, exist_ok=True)
          "

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          # 动态构建当前版本的 wheel
          CIBW_BUILD: ${{ matrix.cibw-build }}
          # 跳过 32 位架构
          CIBW_SKIP: >
            *-i686
            *-win32
            *-musllinux_i686
            *-manylinux_i686
            *-manylinux_2_5_i686
            *-manylinux_2_17_i686
            *-manylinux2014_i686
          # macOS 支持 x86_64 和 arm64
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          # Linux 使用较新的 manylinux
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2014"
          # 安装 Cython 构建依赖
          CIBW_BEFORE_BUILD: "pip install cython>=3.1.2"

      - name: Show built wheels
        run: ls -la wheelhouse/
        shell: bash

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install build dependencies
        run: pip install build cython>=3.1.2
      - name: Build sdist
        run: python -m build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  # 可选：发布到 PyPI
  release:
    name: Release on PyPI
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ build_wheels, build_sdist ]
    environment: release

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: List downloaded packages
        run: find dist -type f -name "*.whl" -o -name "*.tar.gz" | sort

      - name: Verify package integrity
        run: |
          pip install twine
          twine check dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
