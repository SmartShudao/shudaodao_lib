name: Build wheels with Cython

on:
  push:
    tags:
      - "*"        # 匹配 v0.1.0, v1.0.0 等
      - "release-*" # 可选：匹配 release- 开头的 tag
  workflow_dispatch:  # 允许手动触发
    inputs:
      tag_name:
        description: 'Tag to release (e.g. v0.1.0)'
        required: false

env:
  # 设置构建输出详细程度
  CIBW_BUILD_VERBOSITY: 1

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04, windows-2022, macos-13 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential

      - name: Install cibuildwheel
        run: |
          pip install cibuildwheel==2.23.3

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp310-*"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2014"
          CIBW_BEFORE_BUILD: "pip install cython>=3.1.2"

      - name: Show built wheels
        run: ls -la wheelhouse/
        shell: bash

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install build dependencies
        run: pip install build cython>=3.0.0
      - name: Build sdist
        run: python -m build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  # 可选：发布到 PyPI
  release:
    name: Release on PyPI
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ build_wheels, build_sdist ]
    environment: release

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: List downloaded packages
        run: find dist -type f -name "*.whl" -o -name "*.tar.gz" | sort

      - name: Verify package integrity
        run: |
          pip install twine
          twine check dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
